/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// All Manager Applicable Rules

rule OnlyManagerCanAddFunds{
  description: "Only Manager Can Add Funds"
  participant: "altiux.Manager"
  operation: ALL
  resource: "altiux.FundTransferByManager"
  action: ALLOW
}

rule OnlyCustomerCanAddFunds{
  description: "Only Customer Can Add Funds"
  participant: "altiux.Customer"
  operation: ALL
  resource: "altiux.FundTransferByCustomer"
  action: ALLOW
}

rule ManagerCanSeeFunds {
  description: "Manager can see funds"
    participant: "altiux.Manager"
    operation: ALL
    resource: "altiux.Funds"
    action: ALLOW
}

rule ManagerCanSeeAllEmployees {
  description: "Manager Can See All Managers And Employees "
    participant: "altiux.Manager"
    operation: ALL
    resource: "altiux.Employee"
    action: ALLOW
}
rule ManagerCanSeeAllManagers {
  description: "Manager Can See All Managers And Employees "
    participant: "altiux.Manager"
    operation: READ
    resource: "altiux.Manager"
    action: ALLOW
}

rule OnlyManagerCanSeeHisWallet{
    description: "Only Manager Can See His Wallet"
    participant(p): "altiux.Manager"
    operation: ALL
    resource(r): "altiux.Wallet"
    condition: (r.walletId == p.wallet.walletId)
    action: ALLOW
}

//All Employee Applicable Rules



rule EmployeeCanTakeFromFunds{
  description: "EmployeeCanTakeFromFunds"
  participant(p): "altiux.Employee"
  operation: ALL
  resource: "altiux.Funds"
  transaction(tx): "altiux.EmployeeSalary"
  condition: (tx.employee.getIdentifier() == p.getIdentifier())
  action: ALLOW
}
rule EmployeeCanSeeFunds {
  description: "Manager can see funds"
    participant: "altiux.Employee"
    operation: READ
    resource: "altiux.Funds"
    action: ALLOW
}
rule EmployeesCanSeeItsOwnInfo {
  description: "Employees Can See Its Own Info  "
    participant(p): "altiux.Employee"
    operation: READ
    resource(r): "altiux.Employee"
    condition:(r.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule EmployeeCanSeeHisOwnWallet{
    description: "Only Employee Can See His Wallet"
    participant(p): "altiux.Employee"
    operation: READ
    resource(r): "altiux.Wallet"
    condition: (r.getIdentifier() == p.wallet.getIdentifier())
    action: ALLOW
}

// All Amdin Rights

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"      
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}
rule SystemACL {
    description: "System ACL to permit all access"
    participant: "org.hyperledger.composer.system.Participant"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

